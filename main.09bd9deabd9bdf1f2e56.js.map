{"version":3,"sources":["webpack:///./js/colors-keeper.js","webpack:///./js/refs-data-module.js","webpack:///./js/color-switch.js","webpack:///./js/randomizer.js"],"names":["colors","refs","startBtn","document","querySelector","stopBtn","body","addEventListener","changesHasStarted","intervalId","setInterval","min","max","style","backgroundColor","length","Math","floor","random","clearInterval"],"mappings":"gHAAMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WCNWC,EAAO,CAClBC,SAAWC,SAASC,cAAc,yBAClCC,QAAWF,SAASC,cAAc,wBAClCE,KAAMH,SAASC,cAAc,SCE/BH,EAAKC,SAASK,iBAAiB,SAQ/B,WACOC,IAEHA,GAAoB,EACpBC,EAAaC,aAAY,WCjBY,IAACC,EAAKC,EDkBvCX,EAAKK,KAAKO,MAAMC,gBAAkBd,GClBAW,EDkBiC,EClB5BC,EDkB+BZ,EAAOe,OAAQ,ECjBpFC,KAAKC,MAAMD,KAAKE,UAAYN,EAAMD,EAAM,GAAKA,ODQ3B,MAazB,UAhBFV,EAAKI,QAAQE,iBAAiB,SAmB9B,WACEY,cAAcV,MAjBhB,IACID,GAAoB,EACpBC,EAAa,M","file":"main.09bd9deabd9bdf1f2e56.js","sourcesContent":["const colors = [\r\n  '#FFFFFF',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n];\r\n\r\nexport { colors };","export const refs = {\r\n  startBtn:  document.querySelector('[data-action=\"start\"]'),\r\n  stopBtn:   document.querySelector('[data-action=\"stop\"]'),\r\n  body: document.querySelector('body'),\r\n};","import { colors } from './colors-keeper';\r\nimport {randomIntegerFromInterval} from './randomizer';\r\n\r\nimport {refs} from './refs-data-module';\r\n\r\nrefs.startBtn.addEventListener('click', timerStart);\r\nrefs.stopBtn.addEventListener('click', timerStop);\r\n\r\n\r\nconst COLOR_SWITCH_DELAY = 1000;\r\nlet changesHasStarted = false;\r\nlet intervalId = null;\r\n\r\nfunction timerStart() {\r\n  if (!changesHasStarted) {\r\n      \r\n    changesHasStarted = true;\r\n    intervalId = setInterval(() => {\r\n        refs.body.style.backgroundColor = colors[randomIntegerFromInterval(0, colors.length -1)]\r\n    }, COLOR_SWITCH_DELAY);\r\n  }\r\n\r\n  return\r\n}\r\n\r\nfunction timerStop() {\r\n  clearInterval(intervalId);\r\n  changesHasStarted;\r\n}","export const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};"],"sourceRoot":""}